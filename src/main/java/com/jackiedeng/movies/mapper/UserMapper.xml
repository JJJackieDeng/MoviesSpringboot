<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jackiedeng.movies.mapper.UserMapper">
    <resultMap type="com.jackiedeng.movies.pojo.User" id="UsersMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="userName" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phoneNumber" jdbcType="VARCHAR"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="modifiedTime" column="modifiedTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UsersMap">
        select
        *
        from movies.users
        where id = #{id}
    </select>
    <!--根据用户名模糊查询-->
    <select id="selectByLikeName" resultMap="UsersMap">
        select
        *
        from
        users
        <if test="name!=null">
            where name like concat('%',#{name},'%')
        </if>
    </select>
    <!--根据用户名与密码查询单个，登录用-->
    <select id="queryByName" resultMap="UsersMap">
        select
        *
        from users
        where
        userName = #{userName}
    </select>
    <!--分页查询所有-->
    <select id="queryAllByLimit" resultMap="UsersMap">
        select
        *
        from
        users
        limit #{offset}, #{limit}
    </select>
    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UsersMap">
        select
        *
        from movies.users
    </select>
    <!--新增一条数据-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into movies.users(userName, password, age,sex,phoneNumber, createTime,salt)
        values (#{userName}, #{password},#{age},#{sex} ,#{phoneNumber}, #{createTime},#{salt})
    </insert>
    <!--通过主键修改数据-->
    <update id="update">
        update movies.users
        <set>
            <if test="userName != null and userName != ''">
                userName = #{userName},
            </if>
            <if test="age != null and age != ''">
                age = #{age},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                phoneNumber = #{phoneNumber},
            </if>
            <if test="createTime != null">
                createTime = #{createTime},
            </if>
            <if test="modifiedTime != null">
                modifiedTime = #{modifiedTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <!--通过主键删除-->
    <delete id="deleteById">
        delete from movies.users where id = #{id}
    </delete>

</mapper>